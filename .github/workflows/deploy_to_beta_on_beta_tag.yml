name: Deploy Rust Project Based on Tag

on:
  push:
    tags:
      - '*beta*'

env:
  EXECUTABLE_FILE_NAME: "quackers-ws-server"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable  # You can also use nightly or a specific version

      - name: Navigate Into ws-server Directory
        run: cd ws-server

      - name: Ls
        run: ls

      - name: Install dependencies & Build
        run: cd ws-server && cargo build --release

      - name: Run tests
        run: cd ws-server && cargo test --release

      - name: Run clippy
        run: cd ws-server && cargo clippy --release

      - name: Add server to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_IP_ADDRESS }} >> ~/.ssh/known_hosts

      - name: Copy Executable to on_deck folder 
        run: scp -r ./ws-server/target/release/$EXECUTABLE_FILE_NAME root@${{ secrets.SERVER_IP_ADDRESS }}:/root/on_deck/

      - name: Run deploy bash file
        run: ssh -o BatchMode=yes root@your_server_ip '/root/deploy.sh'

      - name: folder test
        run: |
          ssh -n -o BatchMode=yes root@outer_host << 'EOF'
            ssh -n -o BatchMode=yes root@inner_host << 'INNER_EOF'
              touch /root/barf
            INNER_EOF
          EOF

      # - name: SSH into server, build Rust project, and restart systemd service
      #   run: |
      #     ssh -n -o BatchMode=yes root@outer_host << 'EOF'
      #       ssh -n -o BatchMode=yes root@inner_host << 'INNER_EOF'
      #         EXECUTABLE_FILE_NAME=quackers-ws-server
      #         [ -f "root/off_deck/\$EXECUTABLE_FILE_NAME" ] && rm -f root/off_deck/\$EXECUTABLE_FILE_NAME
      #         [ -f "root/live/\$EXECUTABLE_FILE_NAME" ] && mv root/live/\$EXECUTABLE_FILE_NAME root/off_deck/
      #         mv root/on_deck/\$EXECUTABLE_FILE_NAME root/live/
      #         sudo systemctl daemon-reload
      #         sudo systemctl restart quackers_ws_server_systemd.service
      #       INNER_EOF
      #     EOF


      # - name: SSH into server, build Rust project, and restart systemd service
      #   run: |
      #     ssh -n -o BatchMode=yes root@${{ secrets.SERVER_IP_ADDRESS }} << 'EOF'

      #       # Delete the previous rollback option executable in the "off_deck" folder (if it exists)
      #       [ -f "/root/off_deck/$EXECUTABLE_FILE_NAME" ] && rm -f /root/off_deck/$EXECUTABLE_FILE_NAME
      #       ### manual => [ -f "/root/off_deck/quackers-ws-server" ] && rm -f /root/off_deck/quackers-ws-server

      #       # Move the currently running executable from "live" to "off_deck" (if it exists)
      #       [ -f "/root/live/$EXECUTABLE_FILE_NAME" ] && mv /root/live/$EXECUTABLE_FILE_NAME /root/off_deck/
      #       ### manual => [ -f "/root/live/quackers-ws-server" ] && mv /root/live/quackers-ws-server /root/off_deck/

      #       # Move new executable from "on_deck" to "live"
      #       mv root/on_deck/$EXECUTABLE_FILE_NAME root/live/
      #       ### manual => mv /root/on_deck/quackers-ws-server /root/live/

      #       # Restart the running server with systemctl
      #       sudo systemctl daemon-reload
      #       sudo systemctl restart quackers_ws_server_systemd.service

          # EOF

          # # 
          # quackers-ws-server